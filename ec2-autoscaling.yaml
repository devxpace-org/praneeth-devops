AWSTemplateFormatVersion: 2010-09-09
Description: Creating Autoscaling Group, Launch Template, Target Group, and NLB with CloudFormation

Resources:
  praneethLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: praneeth-ASG-LT
      LaunchTemplateData:
        ImageId: ami-09988af04120b3591
        InstanceType: t2.micro
        KeyName: praneeth
        SecurityGroupIds:
        - !GetAtt praneethSG.GroupId
        UserData:
          Fn::Base64: |
            #!/bin/bash

            # Variable Declaration
            #PACKAGE="httpd wget unzip"
            #SVC="httpd"
            URL='https://www.tooplate.com/zip-templates/2098_health.zip'
            ART_NAME='2098_health'
            TEMPDIR="/tmp/webfiles"

            yum --help &> /dev/null

            if [ $? -eq 0 ]
            then
              # Set Variables for CentOS
              PACKAGE="httpd wget unzip"
              SVC="httpd"

              echo "Running Setup on CentOS"
              # Installing Dependencies
              echo "########################################"
              echo "Installing packages."
              echo "########################################"
              sudo yum install $PACKAGE -y > /dev/null
              echo

              # Start & Enable Service
              echo "########################################"
              echo "Start & Enable HTTPD Service"
              echo "########################################"
              sudo systemctl start $SVC
              sudo systemctl enable $SVC
              echo

              # Creating Temp Directory
              echo "########################################"
              echo "Starting Artifact Deployment"
              echo "########################################"
              mkdir -p $TEMPDIR
              cd $TEMPDIR
              echo

              wget $URL > /dev/null
              unzip $ART_NAME.zip > /dev/null
              sudo cp -r $ART_NAME/* /var/www/html/
              echo

              # Bounce Service
              echo "########################################"
              echo "Restarting HTTPD service"
              echo "########################################"
              systemctl restart $SVC
              echo

              # Clean Up
              echo "########################################"
              echo "Removing Temporary Files"
              echo "########################################"
              rm -rf $TEMPDIR
              echo

              sudo systemctl status $SVC
              ls /var/www/html/

            else
                # Set Variables for Ubuntu
              PACKAGE="apache2 wget unzip"
              SVC="apache2"

              echo "Running Setup on CentOS"
              # Installing Dependencies
              echo "########################################"
              echo "Installing packages."
              echo "########################################"
              sudo apt update
              sudo apt install $PACKAGE -y > /dev/null
              echo

              # Start & Enable Service
              echo "########################################"
              echo "Start & Enable HTTPD Service"
              echo "########################################"
              sudo systemctl start $SVC
              sudo systemctl enable $SVC
              echo

              # Creating Temp Directory
              echo "########################################"
              echo "Starting Artifact Deployment"
              echo "########################################"
              mkdir -p $TEMPDIR
              cd $TEMPDIR
              echo

              wget $URL > /dev/null
              unzip $ART_NAME.zip > /dev/null
              sudo cp -r $ART_NAME/* /var/www/html/
              echo

              # Bounce Service
              echo "########################################"
              echo "Restarting HTTPD service"
              echo "########################################"
              systemctl restart $SVC
              echo

              # Clean Up
              echo "########################################"
              echo "Removing Temporary Files"
              echo "########################################"
              rm -rf $TEMPDIR
              echo

              sudo systemctl status $SVC
              ls /var/www/html/
            fi 

  praneethSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  praneethELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: praneeth-ASG-NLB   
      Type: network
      Subnets: 
        - subnet-031d506adca4ad569
        - subnet-09f5de7179cfc80d3
      
  praneethTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Name: praneeth-ASG-NLB-TG
      Port: 80
      Protocol: TCP
      VpcId: vpc-0629ff7307588156b

  PraneethNLBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref praneethTG
      LoadBalancerArn: !Ref praneethELB
      Port: 80
      Protocol: TCP
  
  praneethASG:  
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: ASG-Web
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref praneethLaunchTemplate
        Version: !GetAtt praneethLaunchTemplate.LatestVersionNumber
      MaxSize: '3'
      MinSize: '1'
      DesiredCapacity: '1'
      # Tags: 
      #   - TagProperty
      TargetGroupARNs: 
        - !Ref praneethTG
      VPCZoneIdentifier: 
        - subnet-031d506adca4ad569
        - subnet-09f5de7179cfc80d3

Outputs:
  praneethDNSOutput:
    Description: DNSName of ELB
    Value: !GetAtt praneethELB.DNSName